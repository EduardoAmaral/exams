plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'org.sonarqube' version '3.0'
}

group = 'com.eamaral'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

springBoot {
	mainClassName = 'com.eamaral.worker.configuration.WorkerApplication'
}

sonarqube {
	properties {
		property 'sonar.sourceEncoding', 'UTF-8'
		property 'sonar.projectKey', 'eduardoamaral_exams_worker'
		property 'sonar.organization', 'eduardoamaral'
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.login', "$System.env.EXAMS_SONAR_TOKEN"
		property 'sonar.coverage.exclusions', ['**/*Entity.java', '**/configuration/*']
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-solr'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.awaitility:awaitility:4.0.3'
	testImplementation 'com.h2database:h2'
}

test {
	useJUnitPlatform()
}

bootRun {
	jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5015']
	systemProperty 'spring.profiles.active', 'local'
}