plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version '3.0'
}

group = 'com.eamaral'
version = '0.0.1-SNAPSHOT'

springBoot {
    mainClassName = 'com.eamaral.exams.configuration.ExamsApplication'
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.projectKey', 'eduardoamaral_exams_server'
        property 'sonar.organization', 'eduardoamaral'
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.login', "$System.env.EXAMS_SONAR_TOKEN"
        property 'sonar.coverage.exclusions', ['**/*DTO.java', '**/*Entity.java', '**/configuration/*']
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    runtimeOnly 'org.postgresql:postgresql'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation group: 'org.springframework', name: 'spring-websocket'
    implementation group: 'org.springframework', name: 'spring-messaging'
    implementation group: 'org.springframework.data', name: 'spring-data-redis'
    implementation 'redis.clients:jedis'

    implementation 'org.apache.commons:commons-collections4:4.4'

    implementation 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'com.h2database:h2'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'com.tngtech.archunit:archunit-junit4:0.13.1'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.awaitility:awaitility:4.0.3'
}

configurations {
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    all*.exclude group: 'log4j', module: 'log4j'
}

test {

    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }

    testLogging {
        events 'passed', 'skipped', 'failed'
        exceptionFormat 'full'
    }

}

task setup(type: Exec) {
    commandLine 'docker-compose', 'up', '-d --build --remove-orphans'
}

bootRun {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005']
    systemProperty 'spring.profiles.active', 'local'
}